const express = require('express');
const JediSchema = require('../models/Jedi');
const routes = express.Router();

//POST Endpoint: http://localhost:3000/api/v1/Jedi
routes.post('/', (req, res) => {
  const Jedi = JediSchema(req.body);
  Jedi.save()
    .then((data) => {
      res.json(data);
    })
    .catch((error) => {
      res.json({ message: error });
    });
});
//GET Endpoint: http://localhost:3000/api/v1/Jedi
routes.get('/', (req, res) => {
  JediSchema.find()
    .then((data) => {
      res.json(data);
    })
    .catch((error) => {
      res.json({ message: error });
    });
});
//GET Endpoint: http://localhost:3000/api/v1/Jedi/parametro
routes.get('/:JediId', (req, res) => {
  const { JediId } = req.params;
  JediSchema.findById(JediId)
    .then((data) => {
      res.json(data);
    })
    .catch((error) => {
      res.json({ message: error });
    });
});

//put
routes.put('/:JediId', (req, res) => {
  const { JediId } = req.params;
  const {
    name,
    image,
    generalities: {
      info: { lightsaber, information },
      condition: {
        place: { appearance },
        alive,
      },
    },
  } = req.body;
  JediSchema.updateOne({ _id: JediId },
    {
      $set: {
        name,
        image,
        generalities: {
          info: { lightsaber, information },
          condition: {
            place: {
              appearance,
            },
            alive,
          },
        },
      },
    })
    .then((data) => {
      res.json(data);
    })
    .catch((error) => {
      res.json({ message: error });
    });
});
/* DELETE */
routes.delete('/:JediId', (req, res) => {
  const { JediId } = req.params;
  JediSchema.deleteOne({ _id: JediId })
    .then((data) => res.json(data))
    .catch((error) => res.json({ message: error }));
});

module.exports = routes;
